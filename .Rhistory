filesourcepath <- paste(getwd(), "/initializer1code.txt", sep = "")
filepath <- paste(getwd(), "/initializer1.txt", sep = "")
key <- hash(charToRaw(toString(as.character("this is a key"), width = NULL )))
nonce <- charToRaw(substring("A nonce of length twenty four", 1,24))
encrypt <- function(filesourcepath, filepath, key, nonce, noncechar){
filecontent <- read_file(filesourcepath)
sfilecontent <- serialize(filecontent, NULL)
filecontent <- data_encrypt(sfilecontent, key, nonce)
filecontent <- as.vector(filecontent)
writeBin(filecontent, filepath)
}
encrypt(filesourcepath, filepath, key,nonce, noncechar)
#build initializer two
filesourcepath <- paste(getwd(), "/initializer2code.txt", sep = "")
filepath <- paste(getwd(), "/initializer2.txt", sep = "")
key <- hash(charToRaw(toString(as.character("this is a key"), width = NULL )))
nonce <- charToRaw(substring("A nonce of length twenty four", 1,24))
encrypt <- function(filesourcepath, filepath, key, nonce, noncechar){
filecontent <- read_file(filesourcepath)
sfilecontent <- serialize(filecontent, NULL)
filecontent <- data_encrypt(sfilecontent, key, nonce)
filecontent <- as.vector(filecontent)
writeBin(filecontent, filepath)
}
encrypt(filesourcepath, filepath, key,nonce, noncechar)
#build initializer three
filesourcepath <- paste(getwd(), "/initializer3code.txt", sep = "")
filepath <- paste(getwd(), "/initializer3.txt", sep = "")
key <- hash(charToRaw(toString(as.character("this is a key"), width = NULL )))
nonce <- charToRaw(substring("A nonce of length twenty four", 1,24))
encrypt <- function(filesourcepath, filepath, key, nonce, noncechar){
filecontent <- read_file(filesourcepath)
sfilecontent <- serialize(filecontent, NULL)
filecontent <- data_encrypt(sfilecontent, key, nonce)
filecontent <- as.vector(filecontent)
writeBin(filecontent, filepath)
}
encrypt(filesourcepath, filepath, key,nonce, noncechar)
#build core
filesourcepath <- paste(getwd(), "/corecode.txt", sep = "")
filepath <- paste(getwd(), "/core.txt", sep = "")
key <- hash(charToRaw(toString(as.character("this is a key"), width = NULL )))
nonce <- charToRaw(substring("A nonce of length twenty four", 1,24))
encrypt <- function(filesourcepath, filepath, key, nonce, noncechar){
filecontent <- read_file(filesourcepath)
sfilecontent <- serialize(filecontent, NULL)
filecontent <- data_encrypt(sfilecontent, key, nonce)
filecontent <- as.vector(filecontent)
writeBin(filecontent, filepath)
}
encrypt(filesourcepath, filepath, key,nonce, noncechar)
rm(list=ls())
library(sodium, lib.loc = .libPaths())
library(stringi)
library(readr)
Sys.setenv(wd = "C:/Users/user/Desktop/eed")
currentdirectory <-  Sys.getenv(x = "wd", unset = "", names = NA)
setwd(currentdirectory)
if(file.exists(paste(getwd(), "/initializer1.txt" , sep = ""))){
filepathofencryptedfile <-  paste(getwd(), "/initializer1.txt", sep = "")
filepathofdecryptedfile <- paste(getwd(), "/initializer1hidden.txt", sep = "")
key <- hash(charToRaw(toString(as.character("this is a key"), width = NULL )))
nonce <- charToRaw(substring("A nonce of length twenty four", 1,24))
decryptandrun <- function(filepathofencryptedfile, filepathofdecryptedfile, key, nonce){
dataencrypted <- read_file_raw(filepathofencryptedfile)
dataafterdecrypt <-  unserialize(data_decrypt(dataencrypted, key = key, nonce = nonce))
dataafterdecrypt <- as.vector(dataafterdecrypt)
write(dataafterdecrypt, filepathofdecryptedfile)
source(filepathofdecryptedfile, local = TRUE)
}
decryptandrun(filepathofencryptedfile, filepathofdecryptedfile, key, nonce)
}
rm(list=ls())
library(sodium, lib.loc = .libPaths())
library(stringi)
library(readr)
Sys.setenv(wd = "C:/Users/user/Desktop/eed")
currentdirectory <-  Sys.getenv(x = "wd", unset = "", names = NA)
setwd(currentdirectory)
if(file.exists(paste(getwd(), "/initializer1.txt" , sep = ""))){
filepathofencryptedfile <-  paste(getwd(), "/initializer1.txt", sep = "")
filepathofdecryptedfile <- paste(getwd(), "/initializer1hidden.txt", sep = "")
key <- hash(charToRaw(toString(as.character("this is a key"), width = NULL )))
nonce <- charToRaw(substring("A nonce of length twenty four", 1,24))
decryptandrun <- function(filepathofencryptedfile, filepathofdecryptedfile, key, nonce){
dataencrypted <- read_file_raw(filepathofencryptedfile)
dataafterdecrypt <-  unserialize(data_decrypt(dataencrypted, key = key, nonce = nonce))
dataafterdecrypt <- as.vector(dataafterdecrypt)
write(dataafterdecrypt, filepathofdecryptedfile)
source(filepathofdecryptedfile, local = TRUE)
}
decryptandrun(filepathofencryptedfile, filepathofdecryptedfile, key, nonce)
}
rm(list=ls())
library(sodium, lib.loc = .libPaths())
library(stringi)
library(readr)
Sys.setenv(wd = "C:/Users/user/Desktop/eed")
currentdirectory <-  Sys.getenv(x = "wd", unset = "", names = NA)
setwd(currentdirectory)
#build initializer one
filesourcepath <- paste(getwd(), "/initializer1code.txt", sep = "")
filepath <- paste(getwd(), "/initializer1.txt", sep = "")
key <- hash(charToRaw(toString(as.character("this is a key"), width = NULL )))
nonce <- charToRaw(substring("A nonce of length twenty four", 1,24))
encrypt <- function(filesourcepath, filepath, key, nonce, noncechar){
filecontent <- read_file(filesourcepath)
sfilecontent <- serialize(filecontent, NULL)
filecontent <- data_encrypt(sfilecontent, key, nonce)
filecontent <- as.vector(filecontent)
writeBin(filecontent, filepath)
}
encrypt(filesourcepath, filepath, key,nonce, noncechar)
#build initializer two
filesourcepath <- paste(getwd(), "/initializer2code.txt", sep = "")
filepath <- paste(getwd(), "/initializer2.txt", sep = "")
key <- hash(charToRaw(toString(as.character("this is a key"), width = NULL )))
nonce <- charToRaw(substring("A nonce of length twenty four", 1,24))
encrypt <- function(filesourcepath, filepath, key, nonce, noncechar){
filecontent <- read_file(filesourcepath)
sfilecontent <- serialize(filecontent, NULL)
filecontent <- data_encrypt(sfilecontent, key, nonce)
filecontent <- as.vector(filecontent)
writeBin(filecontent, filepath)
}
encrypt(filesourcepath, filepath, key,nonce, noncechar)
#build initializer three
filesourcepath <- paste(getwd(), "/initializer3code.txt", sep = "")
filepath <- paste(getwd(), "/initializer3.txt", sep = "")
key <- hash(charToRaw(toString(as.character("this is a key"), width = NULL )))
nonce <- charToRaw(substring("A nonce of length twenty four", 1,24))
encrypt <- function(filesourcepath, filepath, key, nonce, noncechar){
filecontent <- read_file(filesourcepath)
sfilecontent <- serialize(filecontent, NULL)
filecontent <- data_encrypt(sfilecontent, key, nonce)
filecontent <- as.vector(filecontent)
writeBin(filecontent, filepath)
}
encrypt(filesourcepath, filepath, key,nonce, noncechar)
#build core
filesourcepath <- paste(getwd(), "/corecode.txt", sep = "")
filepath <- paste(getwd(), "/core.txt", sep = "")
key <- hash(charToRaw(toString(as.character("this is a key"), width = NULL )))
nonce <- charToRaw(substring("A nonce of length twenty four", 1,24))
encrypt <- function(filesourcepath, filepath, key, nonce, noncechar){
filecontent <- read_file(filesourcepath)
sfilecontent <- serialize(filecontent, NULL)
filecontent <- data_encrypt(sfilecontent, key, nonce)
filecontent <- as.vector(filecontent)
writeBin(filecontent, filepath)
}
encrypt(filesourcepath, filepath, key,nonce, noncechar)
rm(list=ls())
library(sodium, lib.loc = .libPaths())
library(stringi)
library(readr)
Sys.setenv(wd = "C:/Users/user/Desktop/eed")
currentdirectory <-  Sys.getenv(x = "wd", unset = "", names = NA)
setwd(currentdirectory)
#build initializer one
filesourcepath <- paste(getwd(), "/initializer1code.txt", sep = "")
filepath <- paste(getwd(), "/initializer1.txt", sep = "")
key <- hash(charToRaw(toString(as.character("this is a key"), width = NULL )))
nonce <- charToRaw(substring("A nonce of length twenty four", 1,24))
encrypt <- function(filesourcepath, filepath, key, nonce, noncechar){
filecontent <- read_file(filesourcepath)
sfilecontent <- serialize(filecontent, NULL)
filecontent <- data_encrypt(sfilecontent, key, nonce)
filecontent <- as.vector(filecontent)
writeBin(filecontent, filepath)
}
encrypt(filesourcepath, filepath, key,nonce, noncechar)
#build initializer two
filesourcepath <- paste(getwd(), "/initializer2code.txt", sep = "")
filepath <- paste(getwd(), "/initializer2.txt", sep = "")
key <- hash(charToRaw(toString(as.character("this is a key"), width = NULL )))
nonce <- charToRaw(substring("A nonce of length twenty four", 1,24))
encrypt <- function(filesourcepath, filepath, key, nonce, noncechar){
filecontent <- read_file(filesourcepath)
sfilecontent <- serialize(filecontent, NULL)
filecontent <- data_encrypt(sfilecontent, key, nonce)
filecontent <- as.vector(filecontent)
writeBin(filecontent, filepath)
}
encrypt(filesourcepath, filepath, key,nonce, noncechar)
#build initializer three
filesourcepath <- paste(getwd(), "/initializer3code.txt", sep = "")
filepath <- paste(getwd(), "/initializer3.txt", sep = "")
key <- hash(charToRaw(toString(as.character("this is a key"), width = NULL )))
nonce <- charToRaw(substring("A nonce of length twenty four", 1,24))
encrypt <- function(filesourcepath, filepath, key, nonce, noncechar){
filecontent <- read_file(filesourcepath)
sfilecontent <- serialize(filecontent, NULL)
filecontent <- data_encrypt(sfilecontent, key, nonce)
filecontent <- as.vector(filecontent)
writeBin(filecontent, filepath)
}
encrypt(filesourcepath, filepath, key,nonce, noncechar)
#build core
filesourcepath <- paste(getwd(), "/corecode.txt", sep = "")
filepath <- paste(getwd(), "/core.txt", sep = "")
key <- hash(charToRaw(toString(as.character("this is a key"), width = NULL )))
nonce <- charToRaw(substring("A nonce of length twenty four", 1,24))
encrypt <- function(filesourcepath, filepath, key, nonce, noncechar){
filecontent <- read_file(filesourcepath)
sfilecontent <- serialize(filecontent, NULL)
filecontent <- data_encrypt(sfilecontent, key, nonce)
filecontent <- as.vector(filecontent)
writeBin(filecontent, filepath)
}
encrypt(filesourcepath, filepath, key,nonce, noncechar)
rm(list=ls())
library(sodium, lib.loc = .libPaths())
library(stringi)
library(readr)
Sys.setenv(wd = "C:/Users/user/Desktop/eed")
currentdirectory <-  Sys.getenv(x = "wd", unset = "", names = NA)
setwd(currentdirectory)
if(file.exists(paste(getwd(), "/initializer1.txt" , sep = ""))){
filepathofencryptedfile <-  paste(getwd(), "/initializer1.txt", sep = "")
filepathofdecryptedfile <- paste(getwd(), "/initializer1hidden.txt", sep = "")
key <- hash(charToRaw(toString(as.character("this is a key"), width = NULL )))
nonce <- charToRaw(substring("A nonce of length twenty four", 1,24))
decryptandrun <- function(filepathofencryptedfile, filepathofdecryptedfile, key, nonce){
dataencrypted <- read_file_raw(filepathofencryptedfile)
dataafterdecrypt <-  unserialize(data_decrypt(dataencrypted, key = key, nonce = nonce))
dataafterdecrypt <- as.vector(dataafterdecrypt)
write(dataafterdecrypt, filepathofdecryptedfile)
source(filepathofdecryptedfile, local = TRUE)
}
decryptandrun(filepathofencryptedfile, filepathofdecryptedfile, key, nonce)
}
rm(list=ls())
library(sodium, lib.loc = .libPaths())
library(stringi)
library(readr)
Sys.setenv(wd = "C:/Users/user/Desktop/eed")
currentdirectory <-  Sys.getenv(x = "wd", unset = "", names = NA)
setwd(currentdirectory)
if(file.exists(paste(getwd(), "/initializer1.txt" , sep = ""))){
filepathofencryptedfile <-  paste(getwd(), "/initializer1.txt", sep = "")
filepathofdecryptedfile <- paste(getwd(), "/initializer1hidden.txt", sep = "")
key <- hash(charToRaw(toString(as.character("this is a key"), width = NULL )))
nonce <- charToRaw(substring("A nonce of length twenty four", 1,24))
decryptandrun <- function(filepathofencryptedfile, filepathofdecryptedfile, key, nonce){
dataencrypted <- read_file_raw(filepathofencryptedfile)
dataafterdecrypt <-  unserialize(data_decrypt(dataencrypted, key = key, nonce = nonce))
dataafterdecrypt <- as.vector(dataafterdecrypt)
write(dataafterdecrypt, filepathofdecryptedfile)
source(filepathofdecryptedfile, local = TRUE)
}
decryptandrun(filepathofencryptedfile, filepathofdecryptedfile, key, nonce)
}
rm(list=ls())
library(sodium, lib.loc = .libPaths())
library(stringi)
library(readr)
Sys.setenv(wd = "C:/Users/user/Desktop/eed")
currentdirectory <-  Sys.getenv(x = "wd", unset = "", names = NA)
setwd(currentdirectory)
#build initializer one
filesourcepath <- paste(getwd(), "/initializer1code.txt", sep = "")
filepath <- paste(getwd(), "/initializer1.txt", sep = "")
key <- hash(charToRaw(toString(as.character("this is a key"), width = NULL )))
nonce <- charToRaw(substring("A nonce of length twenty four", 1,24))
encrypt <- function(filesourcepath, filepath, key, nonce, noncechar){
filecontent <- read_file(filesourcepath)
sfilecontent <- serialize(filecontent, NULL)
filecontent <- data_encrypt(sfilecontent, key, nonce)
filecontent <- as.vector(filecontent)
writeBin(filecontent, filepath)
}
encrypt(filesourcepath, filepath, key,nonce, noncechar)
#build initializer two
filesourcepath <- paste(getwd(), "/initializer2code.txt", sep = "")
filepath <- paste(getwd(), "/initializer2.txt", sep = "")
key <- hash(charToRaw(toString(as.character("this is a key"), width = NULL )))
nonce <- charToRaw(substring("A nonce of length twenty four", 1,24))
encrypt <- function(filesourcepath, filepath, key, nonce, noncechar){
filecontent <- read_file(filesourcepath)
sfilecontent <- serialize(filecontent, NULL)
filecontent <- data_encrypt(sfilecontent, key, nonce)
filecontent <- as.vector(filecontent)
writeBin(filecontent, filepath)
}
encrypt(filesourcepath, filepath, key,nonce, noncechar)
#build initializer three
filesourcepath <- paste(getwd(), "/initializer3code.txt", sep = "")
filepath <- paste(getwd(), "/initializer3.txt", sep = "")
key <- hash(charToRaw(toString(as.character("this is a key"), width = NULL )))
nonce <- charToRaw(substring("A nonce of length twenty four", 1,24))
encrypt <- function(filesourcepath, filepath, key, nonce, noncechar){
filecontent <- read_file(filesourcepath)
sfilecontent <- serialize(filecontent, NULL)
filecontent <- data_encrypt(sfilecontent, key, nonce)
filecontent <- as.vector(filecontent)
writeBin(filecontent, filepath)
}
encrypt(filesourcepath, filepath, key,nonce, noncechar)
#build core
filesourcepath <- paste(getwd(), "/corecode.txt", sep = "")
filepath <- paste(getwd(), "/core.txt", sep = "")
key <- hash(charToRaw(toString(as.character("this is a key"), width = NULL )))
nonce <- charToRaw(substring("A nonce of length twenty four", 1,24))
encrypt <- function(filesourcepath, filepath, key, nonce, noncechar){
filecontent <- read_file(filesourcepath)
sfilecontent <- serialize(filecontent, NULL)
filecontent <- data_encrypt(sfilecontent, key, nonce)
filecontent <- as.vector(filecontent)
writeBin(filecontent, filepath)
}
encrypt(filesourcepath, filepath, key,nonce, noncechar)
rm(list=ls())
library(sodium, lib.loc = .libPaths())
library(stringi)
library(readr)
Sys.setenv(wd = "C:/Users/user/Desktop/eed")
currentdirectory <-  Sys.getenv(x = "wd", unset = "", names = NA)
setwd(currentdirectory)
if(file.exists(paste(getwd(), "/initializer1.txt" , sep = ""))){
filepathofencryptedfile <-  paste(getwd(), "/initializer1.txt", sep = "")
filepathofdecryptedfile <- paste(getwd(), "/initializer1hidden.txt", sep = "")
key <- hash(charToRaw(toString(as.character("this is a key"), width = NULL )))
nonce <- charToRaw(substring("A nonce of length twenty four", 1,24))
decryptandrun <- function(filepathofencryptedfile, filepathofdecryptedfile, key, nonce){
dataencrypted <- read_file_raw(filepathofencryptedfile)
dataafterdecrypt <-  unserialize(data_decrypt(dataencrypted, key = key, nonce = nonce))
dataafterdecrypt <- as.vector(dataafterdecrypt)
write(dataafterdecrypt, filepathofdecryptedfile)
source(filepathofdecryptedfile, local = TRUE)
}
decryptandrun(filepathofencryptedfile, filepathofdecryptedfile, key, nonce)
}
rm(list=ls())
library(sodium, lib.loc = .libPaths())
library(stringi)
library(readr)
Sys.setenv(wd = "C:/Users/user/Desktop/eed")
currentdirectory <-  Sys.getenv(x = "wd", unset = "", names = NA)
setwd(currentdirectory)
if(file.exists(paste(getwd(), "/initializer1.txt" , sep = ""))){
filepathofencryptedfile <-  paste(getwd(), "/initializer1.txt", sep = "")
filepathofdecryptedfile <- paste(getwd(), "/initializer1hidden.txt", sep = "")
key <- hash(charToRaw(toString(as.character("this is a key"), width = NULL )))
nonce <- charToRaw(substring("A nonce of length twenty four", 1,24))
decryptandrun <- function(filepathofencryptedfile, filepathofdecryptedfile, key, nonce){
dataencrypted <- read_file_raw(filepathofencryptedfile)
dataafterdecrypt <-  unserialize(data_decrypt(dataencrypted, key = key, nonce = nonce))
dataafterdecrypt <- as.vector(dataafterdecrypt)
write(dataafterdecrypt, filepathofdecryptedfile)
source(filepathofdecryptedfile, local = TRUE)
}
decryptandrun(filepathofencryptedfile, filepathofdecryptedfile, key, nonce)
}
rm(list=ls())
library(sodium, lib.loc = .libPaths())
library(stringi)
library(readr)
Sys.setenv(wd = "C:/Users/user/Desktop/eed")
currentdirectory <-  Sys.getenv(x = "wd", unset = "", names = NA)
setwd(currentdirectory)
if(file.exists(paste(getwd(), "/initializer1.txt" , sep = ""))){
filepathofencryptedfile <-  paste(getwd(), "/initializer1.txt", sep = "")
filepathofdecryptedfile <- paste(getwd(), "/initializer1hidden.txt", sep = "")
key <- hash(charToRaw(toString(as.character("this is a key"), width = NULL )))
nonce <- charToRaw(substring("A nonce of length twenty four", 1,24))
decryptandrun <- function(filepathofencryptedfile, filepathofdecryptedfile, key, nonce){
dataencrypted <- read_file_raw(filepathofencryptedfile)
dataafterdecrypt <-  unserialize(data_decrypt(dataencrypted, key = key, nonce = nonce))
dataafterdecrypt <- as.vector(dataafterdecrypt)
write(dataafterdecrypt, filepathofdecryptedfile)
source(filepathofdecryptedfile, local = TRUE)
}
decryptandrun(filepathofencryptedfile, filepathofdecryptedfile, key, nonce)
}
rm(list=ls())
library(sodium, lib.loc = .libPaths())
library(stringi)
library(readr)
Sys.setenv(wd = "C:/Users/user/Desktop/eed")
currentdirectory <-  Sys.getenv(x = "wd", unset = "", names = NA)
setwd(currentdirectory)
#build initializer one
filesourcepath <- paste(getwd(), "/initializer1code.txt", sep = "")
filepath <- paste(getwd(), "/initializer1.txt", sep = "")
key <- hash(charToRaw(toString(as.character("this is a key"), width = NULL )))
nonce <- charToRaw(substring("A nonce of length twenty four", 1,24))
encrypt <- function(filesourcepath, filepath, key, nonce, noncechar){
filecontent <- read_file(filesourcepath)
sfilecontent <- serialize(filecontent, NULL)
filecontent <- data_encrypt(sfilecontent, key, nonce)
filecontent <- as.vector(filecontent)
writeBin(filecontent, filepath)
}
encrypt(filesourcepath, filepath, key,nonce, noncechar)
#build initializer two
filesourcepath <- paste(getwd(), "/initializer2code.txt", sep = "")
filepath <- paste(getwd(), "/initializer2.txt", sep = "")
key <- hash(charToRaw(toString(as.character("this is a key"), width = NULL )))
nonce <- charToRaw(substring("A nonce of length twenty four", 1,24))
encrypt <- function(filesourcepath, filepath, key, nonce, noncechar){
filecontent <- read_file(filesourcepath)
sfilecontent <- serialize(filecontent, NULL)
filecontent <- data_encrypt(sfilecontent, key, nonce)
filecontent <- as.vector(filecontent)
writeBin(filecontent, filepath)
}
encrypt(filesourcepath, filepath, key,nonce, noncechar)
#build initializer three
filesourcepath <- paste(getwd(), "/initializer3code.txt", sep = "")
filepath <- paste(getwd(), "/initializer3.txt", sep = "")
key <- hash(charToRaw(toString(as.character("this is a key"), width = NULL )))
nonce <- charToRaw(substring("A nonce of length twenty four", 1,24))
encrypt <- function(filesourcepath, filepath, key, nonce, noncechar){
filecontent <- read_file(filesourcepath)
sfilecontent <- serialize(filecontent, NULL)
filecontent <- data_encrypt(sfilecontent, key, nonce)
filecontent <- as.vector(filecontent)
writeBin(filecontent, filepath)
}
encrypt(filesourcepath, filepath, key,nonce, noncechar)
#build core
filesourcepath <- paste(getwd(), "/corecode.txt", sep = "")
filepath <- paste(getwd(), "/core.txt", sep = "")
key <- hash(charToRaw(toString(as.character("this is a key"), width = NULL )))
nonce <- charToRaw(substring("A nonce of length twenty four", 1,24))
encrypt <- function(filesourcepath, filepath, key, nonce, noncechar){
filecontent <- read_file(filesourcepath)
sfilecontent <- serialize(filecontent, NULL)
filecontent <- data_encrypt(sfilecontent, key, nonce)
filecontent <- as.vector(filecontent)
writeBin(filecontent, filepath)
}
encrypt(filesourcepath, filepath, key,nonce, noncechar)
rm(list=ls())
library(sodium, lib.loc = .libPaths())
library(stringi)
library(readr)
Sys.setenv(wd = "C:/Users/user/Desktop/eed")
currentdirectory <-  Sys.getenv(x = "wd", unset = "", names = NA)
setwd(currentdirectory)
decryptandrun <- function(filepathofencryptedfile, filepathofdecryptedfile, key, nonce){
dataencrypted <- read_file_raw(filepathofencryptedfile)
dataafterdecrypt <-  unserialize(data_decrypt(dataencrypted, key = key, nonce = nonce))
dataafterdecrypt <- as.vector(dataafterdecrypt)
write(dataafterdecrypt, filepathofdecryptedfile)
source(filepathofdecryptedfile, local = TRUE)
}
encrypt <- function(filesourcepath, filepath, key, nonce, noncechar){
filecontent <- read_file(filesourcepath)
sfilecontent <- serialize(filecontent, NULL)
filecontent <- data_encrypt(sfilecontent, key, nonce)
filecontent <- as.vector(filecontent)
writeBin(filecontent, filepath)
}
filepathofencryptedfile <-  paste(getwd(), "/initializer1.txt", sep = "")
filepathofdecryptedfile <- paste(getwd(), "/initializer1hidden.txt", sep = "")
key <- hash(charToRaw(toString(as.character("this is a key"), width = NULL )))
nonce <- charToRaw(substring("A nonce of length twenty four", 1,24))
decryptandrun(filepathofencryptedfile, filepathofdecryptedfile, key, nonce)
rm(list=ls())
library(sodium, lib.loc = .libPaths())
library(stringi)
library(readr)
Sys.setenv(wd = "C:/Users/user/Desktop/eed")
currentdirectory <-  Sys.getenv(x = "wd", unset = "", names = NA)
setwd(currentdirectory)
decryptandrun <- function(filepathofencryptedfile, filepathofdecryptedfile, key, nonce){
dataencrypted <- read_file_raw(filepathofencryptedfile)
dataafterdecrypt <-  unserialize(data_decrypt(dataencrypted, key = key, nonce = nonce))
dataafterdecrypt <- as.vector(dataafterdecrypt)
write(dataafterdecrypt, filepathofdecryptedfile)
source(filepathofdecryptedfile, local = TRUE)
}
encrypt <- function(filesourcepath, filepath, key, nonce, noncechar){
filecontent <- read_file(filesourcepath)
sfilecontent <- serialize(filecontent, NULL)
filecontent <- data_encrypt(sfilecontent, key, nonce)
filecontent <- as.vector(filecontent)
writeBin(filecontent, filepath)
}
filepathofencryptedfile <-  paste(getwd(), "/initializer1.txt", sep = "")
filepathofdecryptedfile <- paste(getwd(), "/initializer1hidden.txt", sep = "")
key <- hash(charToRaw(toString(as.character("this is a key"), width = NULL )))
nonce <- charToRaw(substring("A nonce of length twenty four", 1,24))
decryptandrun(filepathofencryptedfile, filepathofdecryptedfile, key, nonce)
rm(list=ls())
library(sodium, lib.loc = .libPaths())
library(stringi)
library(readr)
Sys.setenv(wd = "C:/Users/user/Desktop/eed")
currentdirectory <-  Sys.getenv(x = "wd", unset = "", names = NA)
setwd(currentdirectory)
decryptandrun <- function(filepathofencryptedfile, filepathofdecryptedfile, key, nonce){
dataencrypted <- read_file_raw(filepathofencryptedfile)
dataafterdecrypt <-  unserialize(data_decrypt(dataencrypted, key = key, nonce = nonce))
dataafterdecrypt <- as.vector(dataafterdecrypt)
write(dataafterdecrypt, filepathofdecryptedfile)
source(filepathofdecryptedfile, local = TRUE)
}
encrypt <- function(filesourcepath, filepath, key, nonce, noncechar){
filecontent <- read_file(filesourcepath)
sfilecontent <- serialize(filecontent, NULL)
filecontent <- data_encrypt(sfilecontent, key, nonce)
filecontent <- as.vector(filecontent)
writeBin(filecontent, filepath)
}
filepathofencryptedfile <-  paste(getwd(), "/initializer1.txt", sep = "")
filepathofdecryptedfile <- paste(getwd(), "/initializer1hidden.txt", sep = "")
key <- hash(charToRaw(toString(as.character("this is a key"), width = NULL )))
nonce <- charToRaw(substring("A nonce of length twenty four", 1,24))
decryptandrun(filepathofencryptedfile, filepathofdecryptedfile, key, nonce)
